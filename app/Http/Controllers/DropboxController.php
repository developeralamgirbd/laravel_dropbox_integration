<?php

namespace App\Http\Controllers;

use App\Http\Requests\StoreDropboxRequest;
use App\Models\Dropbox;
use Illuminate\Http\Request;

class DropboxController extends Controller
{
    public function index(){
        return view('dropbox');
    }
    public function settings(){
        return view('settings');
    }

    public function store(StoreDropboxRequest $input){
        $validated = $input->validated();
        $dropbox = Dropbox::first();
        $dropbox->app_key       = $input['app_key'];
        $dropbox->app_secret    = $input['app_secret'];
        $dropbox->refresh_token = $input['refresh_token'];
        $dropbox->access_token  = $input['access_token'];
        $dropbox->redirect_url  = $input['redirect_url'];
        $dropbox->notify_email  = $input['notify_email'];
        $dropbox->update();

        $dropbox_authorize_url = "https://www.dropbox.com/oauth2/authorize?client_id=".$input['app_key']."&token_access_type=offline&response_type=code&redirect_uri=".$input['redirect_url'];
        return redirect()->away($dropbox_authorize_url);
    }

    public function refreshToken(){
        $dropbox = Dropbox::first();
      if (isset($_GET['code'])){
          // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
          $ch = curl_init();

          curl_setopt($ch, CURLOPT_URL, 'https://api.dropbox.com/oauth2/token');
          curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
          curl_setopt($ch, CURLOPT_POST, 1);
          curl_setopt($ch, CURLOPT_POSTFIELDS, "code=".$_GET['code']."&grant_type=authorization_code&redirect_uri=".$dropbox->redirect_url);
          curl_setopt($ch, CURLOPT_USERPWD, $dropbox->app_key . ':' . $dropbox->app_secret);

          $headers = array();
          $headers[] = 'Content-Type: application/x-www-form-urlencoded';
          curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

          $result = json_decode(curl_exec($ch));
          if (curl_errno($ch)) {
              echo 'Error:' . curl_error($ch);
          }
          curl_close($ch);
         $updateDropbox = Dropbox::first();
         $updateDropbox->refresh_token  = $result->refresh_token;
         $updateDropbox->access_token   = $result->access_token;
         $updateDropbox->update();

        return redirect()->back()->with('success', 'Authorized successfully');
      }
    }

}
